-- Add email and notification preference columns to the public.users table
ALTER TABLE public.users
ADD COLUMN email character varying,
ADD COLUMN email_notifications_new_message boolean DEFAULT true NOT NULL,
ADD COLUMN email_notifications_new_event boolean DEFAULT true NOT NULL;

-- Create a function to copy the email from auth.users to public.users and public.organizations on new user signup
CREATE OR REPLACE FUNCTION public.handle_new_user_email()
RETURNS trigger
LANGUAGE plpgsql
SECURITY DEFINER SET search_path = public
AS $$
BEGIN
  -- Copy email to the public.users table for the new user
  UPDATE public.users
  SET email = NEW.email
  WHERE auth_id = NEW.id;

  -- If the new user is an organization, update their email in the organizations table as well
  UPDATE public.organizations
  SET email = NEW.email
  WHERE auth_id = NEW.id;
  
  RETURN NEW;
END;
$$;

-- Create a trigger that executes the function after a new user is created in the auth schema
CREATE TRIGGER on_auth_user_created_copy_email
  AFTER INSERT ON auth.users
  FOR EACH ROW EXECUTE FUNCTION public.handle_new_user_email();

-- Backfill existing users' emails from the auth.users table where the email is currently null
UPDATE public.users u
SET email = a.email
FROM auth.users a
WHERE u.auth_id = a.id AND u.email IS NULL;

-- Backfill existing organizations' emails from the auth.users table where the email is currently null
UPDATE public.organizations o
SET email = a.email
FROM auth.users a
WHERE o.auth_id = a.id AND o.email IS NULL;
